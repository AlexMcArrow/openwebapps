# HG changeset patch
# User Fabrice Desr√© <fabrice@mozilla.com>
# Parent fd7cc20ac40c65cd6ad95ca7aa1ef4bf31f4e49e
Implement an Android Homescreen Widget

diff --git a/embedding/android/AndroidManifest.xml.in b/embedding/android/AndroidManifest.xml.in
--- a/embedding/android/AndroidManifest.xml.in
+++ b/embedding/android/AndroidManifest.xml.in
@@ -100,5 +100,19 @@
           </intent-filter>
 	</activity>
 #endif
+        <receiver android:name="MozillaAppWidgetProvider" >
+	    <intent-filter>
+		<action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
+	    </intent-filter>
+	    <intent-filter>
+	        <action android:name="org.mozilla.WIDGET_UPDATE" />
+            </intent-filter>
+	    <meta-data android:name="android.appwidget.provider"
+		       android:resource="@xml/widget_provider" />
+	</receiver>
+	
+	<!-- Service to perform places queries -->
+        <service android:name=".MozillaAppWidgetProvider$UpdateService" />
+
     </application>
 </manifest> 
diff --git a/embedding/android/Makefile.in b/embedding/android/Makefile.in
--- a/embedding/android/Makefile.in
+++ b/embedding/android/Makefile.in
@@ -59,6 +59,7 @@ PROCESSEDJAVAFILES = \
   App.java \
   Restarter.java \
   NotificationHandler.java \
+  MozillaAppWidgetProvider.java \
   $(NULL)
 
 
@@ -107,10 +108,13 @@ RES_LAYOUT = \
   res/layout/notification_progress.xml \
   res/layout/notification_progress_text.xml \
   res/layout/notification_icon_text.xml \
+  res/layout/mozilla_appwidget.xml \
   $(NULL)
 
 RES_VALUES = res/values/colors.xml res/values/themes.xml
 
+RES_XML = res/xml/widget_provider.xml
+
 AB_rCD = $(shell echo $(AB_CD) | sed -e s/-/-r/)
 
 JAVA_CLASSPATH = $(ANDROID_SDK)/android.jar
@@ -172,10 +176,14 @@ RES_DRAWABLE = $(addprefix res/drawable/
 	$(NSINSTALL) -D res/values
 	$(NSINSTALL) $(srcdir)/resources/values/* res/values/
 
-R.java: $(MOZ_APP_ICON) $(RES_LAYOUT) $(RES_DRAWABLE) $(RES_VALUES) res/drawable/icon.png res/drawable-hdpi/icon.png res/values/strings.xml AndroidManifest.xml
+$(RES_XML): $(subst res/,$(srcdir)/resources/,$(RES_XML))
+	$(NSINSTALL) -D res/xml
+	$(NSINSTALL) $(srcdir)/resources/xml/* res/xml/
+
+R.java: $(MOZ_APP_ICON) $(RES_LAYOUT) $(RES_DRAWABLE) $(RES_VALUES) $(RES_XML) res/drawable/icon.png res/drawable-hdpi/icon.png res/values/strings.xml AndroidManifest.xml
 	$(AAPT) package -f -M AndroidManifest.xml -I $(ANDROID_SDK)/android.jar -S res -J . --custom-package org.mozilla.gecko
 
-gecko.ap_: AndroidManifest.xml res/drawable/icon.png res/drawable-hdpi/icon.png $(RES_LAYOUT) $(RES_DRAWABLE) $(RES_VALUES) res/values/strings.xml FORCE
+gecko.ap_: AndroidManifest.xml res/drawable/icon.png res/drawable-hdpi/icon.png $(RES_LAYOUT) $(RES_DRAWABLE) $(RES_VALUES) $(RES_XML) res/values/strings.xml FORCE
 	$(AAPT) package -f -M AndroidManifest.xml -I $(ANDROID_SDK)/android.jar  -S res -F $@
 
 res/values/strings.xml: $(DEFAULT_BRANDPATH) $(DEFAULT_STRINGSPATH)
diff --git a/embedding/android/MozillaAppWidgetProvider.java.in b/embedding/android/MozillaAppWidgetProvider.java.in
new file mode 100644
--- /dev/null
+++ b/embedding/android/MozillaAppWidgetProvider.java.in
@@ -0,0 +1,266 @@
+/* -*- Mode: Java; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-
+ * ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is Mozilla Android code.
+ *
+ * The Initial Developer of the Original Code is Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2011
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+#filter substitution
+package @ANDROID_PACKAGE_NAME@;
+
+import android.content.*;
+import android.appwidget.*;
+import android.app.*;
+import android.os.IBinder;
+import android.widget.RemoteViews;
+import android.util.Log;
+import java.io.*;
+import android.database.*;
+import android.database.sqlite.*;
+import android.graphics.*;
+import org.json.*;
+import android.os.*;
+import java.util.*;
+
+public class MozillaAppWidgetProvider extends AppWidgetProvider {
+    static AlarmManager mAlarmManager = null;
+    static PendingIntent mPendingIntent = null;
+    
+    @Override
+     public void onReceive(Context context, Intent intent) {
+        super.onReceive(context, intent);
+        if("org.mozilla.WIDGET_UPDATE".equals(intent.getAction())) {
+            Bundle extras = intent.getExtras();
+            if(extras != null) {
+                AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
+                ComponentName thisAppWidget = new ComponentName(context.getPackageName(), MozillaAppWidgetProvider.class.getName());
+                int[] appWidgetIds = appWidgetManager.getAppWidgetIds(thisAppWidget);
+                onUpdate(context, appWidgetManager, appWidgetIds);
+            }
+        }
+    }
+    
+    @Override
+    public void onDisabled(Context context) {
+        if (mAlarmManager != null)
+            mAlarmManager.cancel(mPendingIntent);
+    }
+    
+    @Override
+    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
+        context.startService(new Intent(context, UpdateService.class));
+        if (mPendingIntent == null) {
+            Intent intent = new Intent("org.mozilla.WIDGET_UPDATE");
+            mPendingIntent = PendingIntent.getBroadcast(context, 0, intent, 0);
+            mAlarmManager = (AlarmManager)context.getSystemService(context.ALARM_SERVICE);
+            Calendar calendar = Calendar.getInstance();
+            calendar.setTimeInMillis(System.currentTimeMillis());
+            calendar.add(Calendar.SECOND, 60);
+            mAlarmManager.setInexactRepeating(AlarmManager.RTC, calendar.getTimeInMillis(), 60*1000, mPendingIntent);
+        }
+    }
+    
+    /**
+     * using a service to actually update the UI, to avoid being labelled as "unresponsive"
+     */
+    public static class UpdateService extends Service {
+        @Override
+        public void onStart(Intent intent, int startId) {
+            RemoteViews updateViews = buildUpdate(this);
+
+            // Push update for this widget to the home screen
+            ComponentName thisWidget = new ComponentName(this, MozillaAppWidgetProvider.class);
+            AppWidgetManager manager = AppWidgetManager.getInstance(this);
+            manager.updateAppWidget(thisWidget, updateViews);
+        }
+
+        @Override
+        public IBinder onBind(Intent intent) {
+            return null;
+        }
+
+        /**
+         * Build a widget update to show the current favorites.
+         */
+        public RemoteViews buildUpdate(Context context) {
+            RemoteViews views = new RemoteViews(context.getPackageName(), org.mozilla.gecko.R.layout.mozilla_appwidget);
+
+            // find the default profile directory
+            String basePath = context.getFilesDir() + "/mozilla";
+            File file = new File(basePath);
+
+            if (!file.exists() || !file.isDirectory())
+                return views;
+
+            String[] files = file.list();
+            String profilePath = null;
+            for (int i = 0; i < files.length && profilePath == null; i++) {
+                if (files[i].endsWith(".default"))
+                  profilePath = files[i];
+            }
+            
+            if (profilePath == null)
+              return views;
+
+            // query the places database
+            try {
+                SQLiteDatabase db = SQLiteDatabase.openDatabase(basePath + "/" + profilePath + "/places.sqlite", null, SQLiteDatabase.OPEN_READONLY | SQLiteDatabase.NO_LOCALIZED_COLLATORS);
+                /*
+                 * SELECT * FROM moz_places order by frecency desc limit 10
+                 * SELECT pl.title, pl.url, fav.data as favicon, fav.mime_type
+                 * FROM moz_places as pl, moz_favicons as fav
+                 * WHERE pl.favicon_id = fav.id
+                 * ORDER BY pl.frecency DESC LIMIT 10
+                 */
+                Cursor cursor = db.rawQuery("SELECT pl.title, pl.url, fav.data as favicon, fav.mime_type FROM moz_places as pl, moz_favicons as fav WHERE pl.favicon_id = fav.id ORDER BY pl.frecency DESC LIMIT 10", null);
+                for(int i = 0; cursor.moveToNext(); i++) {
+                    byte[] favicon = cursor.getBlob(2);
+                    Bitmap bitmap = Bitmap.createScaledBitmap(BitmapFactory.decodeByteArray(favicon, 0, favicon.length), 48, 48, true);
+
+                    int resId = -1;
+                    switch(i) {
+                        case 0:
+                            resId = org.mozilla.gecko.R.id.widgetLauncher0;
+                            break;
+                        case 1:
+                            resId = org.mozilla.gecko.R.id.widgetLauncher1;
+                            break;
+                        case 2:
+                            resId = org.mozilla.gecko.R.id.widgetLauncher2;
+                            break;
+                        case 3:
+                            resId = org.mozilla.gecko.R.id.widgetLauncher3;
+                            break;
+                        case 4:
+                            resId = org.mozilla.gecko.R.id.widgetLauncher4;
+                            break;
+                        case 5:
+                            resId = org.mozilla.gecko.R.id.widgetLauncher5;
+                            break;
+                        case 6:
+                            resId = org.mozilla.gecko.R.id.widgetLauncher6;
+                            break;
+                        case 7:
+                            resId = org.mozilla.gecko.R.id.widgetLauncher7;
+                            break;
+                        case 8:
+                            resId = org.mozilla.gecko.R.id.widgetLauncher8;
+                            break;
+                        case 9:
+                            resId = org.mozilla.gecko.R.id.widgetLauncher9;
+                            break;
+                    }
+                    if (resId != -1) {
+                       views.setImageViewBitmap(resId, bitmap);
+                       Intent intent = new Intent(context, App.class);
+                       intent.setData(android.net.Uri.parse(cursor.getString(1)));
+                       intent.setAction(intent.ACTION_VIEW);
+                       PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, 0);
+                       views.setOnClickPendingIntent(resId, pendingIntent);
+                    }
+                }
+                cursor.close();
+                db.close();
+                views.setViewVisibility(org.mozilla.gecko.R.id.widgetFavorites1, android.view.View.VISIBLE);
+                views.setViewVisibility(org.mozilla.gecko.R.id.widgetFavorites2, android.view.View.VISIBLE);
+                
+                // set the intent to launch fennec when tapping on the logo
+                Intent intent = new Intent(context, App.class);
+                intent.setAction(intent.ACTION_VIEW);
+                PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, 0);
+                views.setOnClickPendingIntent(org.mozilla.gecko.R.id.widgetIcon, pendingIntent);
+
+            } catch(Exception e) {
+                Log.e("MozillaAppWidgetProvider", e.toString());
+            }
+
+            return setPersonas(basePath + "/" + profilePath, views, context);
+        }
+        
+        /**
+         * if personas are set up in fennec, use them to style our widget
+         */
+        public RemoteViews setPersonas(String profilePath, RemoteViews views, Context context) {
+            File file = new File(profilePath + "/prefs.js");
+            if (!file.exists())
+              return views;
+            try {
+                BufferedReader reader = new BufferedReader(new FileReader(file), 1024);
+                String line = null;
+                boolean hasPersonas = false;
+                String personas = null;
+
+                while ((line = reader.readLine()) != null) {
+                    if (line.equals("user_pref(\"lightweightThemes.isThemeSelected\", true);")) {
+                        File header = new File(profilePath + "/lightweighttheme-header");
+                        hasPersonas = header.exists();
+                    }
+                    if (line.startsWith("user_pref(\"lightweightThemes.usedThemes")) {
+                        String tmp = line.substring(line.indexOf('[') + 1, line.indexOf('}'));
+                        personas = "";
+                        for (int j = 0; j < tmp.length(); j++) {
+                          if (tmp.charAt(j) != '\\')
+                            personas += tmp.charAt(j);
+                        }
+                        personas += "}";
+                    }
+                }
+                reader.close();
+
+                if (!hasPersonas)
+                  return views;
+
+                views.setInt(org.mozilla.gecko.R.id.widgetHeader, "setBackgroundResource", 0);
+                views.setInt(org.mozilla.gecko.R.id.widgetLine1, "setBackgroundResource", 0);
+                views.setInt(org.mozilla.gecko.R.id.widgetLine2, "setBackgroundResource", 0);
+                views.setInt(org.mozilla.gecko.R.id.widgetContent, "setBackgroundResource", 0);
+                Bitmap header = BitmapFactory.decodeFile(profilePath + "/lightweighttheme-header");
+                
+                // TODO : get the actual widget size to crop the personas header
+                Bitmap background = Bitmap.createBitmap(header, header.getWidth() - 294, header.getHeight() - 146, 294, 146);
+                views.setImageViewBitmap(org.mozilla.gecko.R.id.widgetPersona, background);
+                
+                // use the textcolor for the title
+                String textcolor = "#000000";
+                try {
+                    JSONObject object = (JSONObject) new JSONTokener(personas).nextValue();
+                    textcolor = object.getString("textcolor");
+                } catch(Exception e) {
+                }
+                views.setTextColor(org.mozilla.gecko.R.id.widgetTitle, Color.parseColor(textcolor));
+            } catch(Exception e) {
+                
+            }
+            return views;
+        }
+    }
+}
\ No newline at end of file
diff --git a/embedding/android/locales/en-US/android_strings.dtd b/embedding/android/locales/en-US/android_strings.dtd
--- a/embedding/android/locales/en-US/android_strings.dtd
+++ b/embedding/android/locales/en-US/android_strings.dtd
@@ -12,6 +12,8 @@
 <!ENTITY  crash_close_label "Close">
 <!ENTITY  crash_restart_label "Restart &brandShortName;">
 <!ENTITY  sending_crash_report "Sending crash report\u2026">
+
+<!ENTITY widget_title "Favorite Sites">
 <!ENTITY  exit_label "Exit">
 <!ENTITY  incompatable_device "&brandShortName; does not support this device and you may experience
 problems.">
diff --git a/embedding/android/resources/layout/mozilla_appwidget.xml b/embedding/android/resources/layout/mozilla_appwidget.xml
new file mode 100644
--- /dev/null
+++ b/embedding/android/resources/layout/mozilla_appwidget.xml
@@ -0,0 +1,113 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:a="http://schemas.android.com/apk/res/android"
+              a:layout_width="fill_parent"
+              a:layout_height="fill_parent"
+              a:padding="10sp">
+  
+  <ImageView a:id="@+id/widgetPersona"
+             a:layout_width="fill_parent"
+             a:layout_height="fill_parent"
+             a:layout_marginLeft="20sp"
+             a:layout_marginTop="-20sp"/>
+
+  <LinearLayout a:id="@+id/widgetMain"
+                a:layout_width="fill_parent"
+                a:layout_height="fill_parent"
+                a:layout_marginLeft="20sp"
+                a:layout_marginTop="20sp"
+                a:orientation="vertical"
+                a:gravity="center_horizontal">
+    
+    <!-- section title and inset line -->
+    <LinearLayout a:id="@+id/widgetHeader"
+                  a:layout_width="fill_parent"
+                  a:layout_height="wrap_content"
+                  a:orientation="horizontal"
+                  a:background="#363f3b"
+                  a:gravity="center">
+      <TextView a:id="@+id/widgetTitle"
+                a:layout_width="wrap_content"
+                a:layout_height="wrap_content"
+                a:text="@string/widget_title"
+                a:textSize="16sp"/>
+    </LinearLayout>
+    <LinearLayout a:id="@+id/widgetLine1"
+                  a:layout_width="fill_parent"
+                  a:layout_height="1sp"
+                  a:background="#252B28"/>
+    <LinearLayout a:id="@+id/widgetLine2"
+                  a:layout_width="fill_parent"
+                  a:layout_height="1sp"
+                  a:background="#4F5C55"/>
+    
+    <!-- content -->
+    <LinearLayout a:id="@+id/widgetContent"
+                  a:orientation="vertical"
+                  a:layout_width="fill_parent"
+                  a:layout_height="wrap_content"
+                  a:paddingTop="10sp"
+                  a:background="#af363f3b"> <!-- #aarrggbb -->
+      <LinearLayout a:id="@+id/widgetFavorites1"
+                    a:orientation="horizontal"
+                    a:layout_width="fill_parent"
+                    a:layout_height="fill_parent"
+                    a:gravity="center_horizontal"
+                    a:visibility="invisible">
+        <ImageButton a:id="@+id/widgetLauncher0"
+                   a:src="@drawable/icon"
+                   a:layout_width="wrap_content"
+                   a:layout_height="wrap_content"/>
+        <ImageButton a:id="@+id/widgetLauncher1"
+                   a:src="@drawable/icon"
+                   a:layout_width="wrap_content"
+                   a:layout_height="wrap_content"/>
+        <ImageButton a:id="@+id/widgetLauncher2"
+                   a:src="@drawable/icon"
+                   a:layout_width="wrap_content"
+                   a:layout_height="wrap_content"/>
+        <ImageButton a:id="@+id/widgetLauncher3"
+                   a:src="@drawable/icon"
+                   a:layout_width="wrap_content"
+                   a:layout_height="wrap_content"/>
+        <ImageButton a:id="@+id/widgetLauncher4"
+                   a:src="@drawable/icon"
+                   a:layout_width="wrap_content"
+                   a:layout_height="wrap_content"/>
+      </LinearLayout>
+      <LinearLayout a:id="@+id/widgetFavorites2"
+                    a:orientation="horizontal"
+                    a:layout_width="fill_parent"
+                    a:layout_height="wrap_content"
+                    a:gravity="center_horizontal"
+                    a:visibility="invisible">
+        <ImageButton a:id="@+id/widgetLauncher5"
+                   a:src="@drawable/icon"
+                   a:layout_width="wrap_content"
+                   a:layout_height="wrap_content"/>
+        <ImageButton a:id="@+id/widgetLauncher6"
+                   a:src="@drawable/icon"
+                   a:layout_width="wrap_content"
+                   a:layout_height="wrap_content"/>
+        <ImageButton a:id="@+id/widgetLauncher7"
+                   a:src="@drawable/icon"
+                   a:layout_width="wrap_content"
+                   a:layout_height="wrap_content"/>
+        <ImageButton a:id="@+id/widgetLauncher8"
+                   a:src="@drawable/icon"
+                   a:layout_width="wrap_content"
+                   a:layout_height="wrap_content"/>
+        <ImageButton a:id="@+id/widgetLauncher9"
+                   a:src="@drawable/icon"
+                   a:layout_width="wrap_content"
+                   a:layout_height="wrap_content"/>
+      </LinearLayout>
+    </LinearLayout>
+  </LinearLayout>
+  
+  <!-- icon, stacked on top of other views -->
+  <ImageView a:id="@+id/widgetIcon"
+             a:src="@drawable/icon"
+             a:layout_width="wrap_content"
+             a:layout_height="wrap_content"/>
+  
+</RelativeLayout>
\ No newline at end of file
diff --git a/embedding/android/resources/xml/widget_provider.xml b/embedding/android/resources/xml/widget_provider.xml
new file mode 100644
--- /dev/null
+++ b/embedding/android/resources/xml/widget_provider.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0"?>
+<appwidget-provider xmlns:android="http://schemas.android.com/apk/res/android"
+    android:minWidth="294dp"
+    android:minHeight="146dp"
+    android:updatePeriodMillis="1800000"
+    android:initialLayout="@layout/mozilla_appwidget">
+</appwidget-provider>
\ No newline at end of file
diff --git a/embedding/android/strings.xml.in b/embedding/android/strings.xml.in
--- a/embedding/android/strings.xml.in
+++ b/embedding/android/strings.xml.in
@@ -21,4 +21,6 @@
   <string name="exit_label">&exit_label;</string>
   <string name="incompatable_device">&incompatable_device;</string>
   <string name="continue_label">&continue_label;</string>
+
+  <string name="widget_title">&widget_title;</string>
 </resources>
