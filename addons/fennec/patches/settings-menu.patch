# HG changeset patch
# User Fabrice Desré <fabrice@mozilla.com>
# Parent b9e6c5262718b41a838b8d1960ccd58067bd4f36
Allows web applicationss to add entries in the standard application menu

diff --git a/mobile/chrome/content/browser-ui.js b/mobile/chrome/content/browser-ui.js
--- a/mobile/chrome/content/browser-ui.js
+++ b/mobile/chrome/content/browser-ui.js
@@ -609,7 +609,9 @@ var BrowserUI = {
     document.getElementById("cmd_back").setAttribute("disabled", "true");
     document.getElementById("cmd_forward").setAttribute("disabled", "true");
     document.getElementById("cmd_openLocation").setAttribute("disabled", "true");
-    document.getElementById("cmd_menu").setAttribute("disabled", "true");
+    //document.getElementById("cmd_menu").setAttribute("disabled", "true");
+    while (AppMenu.panel.firstChild)
+      AppMenu.panel.removeChild(AppMenu.panel.firstChild);
 
     let tabMenu = document.getElementById("context-openinnewtab");
     tabMenu.parentNode.removeChild(tabMenu);
diff --git a/mobile/chrome/content/common-ui.js b/mobile/chrome/content/common-ui.js
--- a/mobile/chrome/content/common-ui.js
+++ b/mobile/chrome/content/common-ui.js
@@ -1324,6 +1324,8 @@ var WebappsUI = {
     this.messageManager.addMessageListener("OpenWebapp:GetLocale", this);
     this.messageManager.addMessageListener("OpenWebapp:IsInstalled", this);
     this.messageManager.addMessageListener("WebappBgProtocol:GetProfD", this);
+    this.messageManager.addMessageListener("Webapps:AddAppMenuEntry", this);
+    this.messageManager.addMessageListener("Webapps:RemoveAppMenuEntry", this);
   },
   
   receiveMessage: function(aMessage) {
@@ -1352,9 +1354,29 @@ var WebappsUI = {
         let dir =  Cc["@mozilla.org/file/directory_service;1"].getService(Ci.nsIProperties).get("ProfD", Ci.nsIFile);
         return { path: dir.path };
         break;
+      case "Webapps:AddAppMenuEntry":
+        let button = document.createElement("toolbarbutton");
+        button.setAttribute("class", "appmenu-site-button appmenu-button");
+        button.setAttribute("label", aMessage.json.label);
+        button.setAttribute("image", aMessage.json.icon);
+        button.setAttribute("id", aMessage.json.id);
+        button.addEventListener("command", WebappsUI, false);
+        AppMenu.panel.appendChild(button);
+        break;
+      case "Webapps:RemoveAppMenuEntry":
+        let menu = document.getElementById(aMessage.json.id)
+        menu.removeEventListener("command", WebappsUI, false);
+        AppMenu.panel.removeChild(menu);
+        break;
     }
   },
   
+  handleEvent: function(aEvent) {
+    dump("XxXxX got event from " + aEvent.target.getAttribute("id") + "\n");
+    this.messageManager.sendAsyncMessage("Webapps:ActivateAppMenu", { id: aEvent.target.getAttribute("id") });
+    dump("\tdone\n");
+  },
+  
   checkBox: function(aEvent) {
     let elem = aEvent.originalTarget;
     let perm = elem.getAttribute("perm");
diff --git a/mobile/components/webapps/AppMenu.idl b/mobile/components/webapps/AppMenu.idl
new file mode 100644
--- /dev/null
+++ b/mobile/components/webapps/AppMenu.idl
@@ -0,0 +1,52 @@
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is Webapps.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Corporation
+ * Portions created by the Initial Developer are Copyright (C) 2010
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *   Fabrice Desré <fabrice@mozilla.com>
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+#include "nsISupports.idl"
+
+[scriptable, function, uuid(b96e1f0b-8ff4-4cf3-bfb6-33976c172f07)]
+interface nsIAppMenuCallback : nsISupports
+{
+  void openAppMenu(in AString menuId);
+};
+
+[scriptable, uuid(64944434-872d-4006-b728-098da00ac423)]
+interface nsIAppMenu : nsISupports
+{
+  AString addEntry(in AString label, in AString icon, in nsIAppMenuCallback callback);
+
+  void removeEntry(in AString entry);
+};
diff --git a/mobile/components/webapps/AppMenu.js b/mobile/components/webapps/AppMenu.js
new file mode 100644
--- /dev/null
+++ b/mobile/components/webapps/AppMenu.js
@@ -0,0 +1,97 @@
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is Webapps.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Corporation
+ * Portions created by the Initial Developer are Copyright (C) 2010
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *   Fabrice Desré <fabrice@mozilla.com>
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+const Ci = Components.interfaces;
+const Cc = Components.classes;
+const Cu = Components.utils;
+
+Cu.import("resource://gre/modules/XPCOMUtils.jsm");
+Cu.import("resource://gre/modules/Services.jsm");
+
+function AppMenu() {
+  this.messageManager = Cc["@mozilla.org/childprocessmessagemanager;1"].getService(Ci.nsISyncMessageSender);
+  this.messageManager.addMessageListener("Webapps:ActivateAppMenu", this);
+  
+  this.receiveMessage = function(aMessage) {
+    if (aMessage.name == "Webapps:ActivateAppMenu") {
+      if (this._callback[aMessage.json.id])
+        this._callback[aMessage.json.id].openAppMenu(aMessage.json.id);
+    }
+  };
+  
+  this.entryId = 0;
+  this._callback = [];
+}
+
+AppMenu.prototype = {
+  // =========================== nsIAppMenu ===========================
+  addEntry: function(aLabel, aIcon, aCallback) {
+    let id = "__app_menu__" + this.entryId;
+    this.entryId++;
+    this.messageManager.sendAsyncMessage("Webapps:AddAppMenuEntry", { label: aLabel, icon: aIcon, id: id });
+    this._callback[id] = aCallback;
+    return id;
+  },
+  
+  removeEntry: function(aId) {
+    dump("XxXxX Will remove entry " + aId + "\n");
+    this.messageManager.sendAsyncMessage("Webapps:RemoveAppMenuEntry", { id: aId });
+    delete this._callback[aId];
+  },
+
+  // =========================== nsIClassInfo ===========================
+  flags: Ci.nsIClassInfo.DOM_OBJECT,
+  classDescription: "AppMenu",
+  getInterfaces: function getInterfaces(count) {
+    var interfaceList = [Ci.nsIAppMenu, Ci.nsIClassInfo];
+    count.value = interfaceList.length;
+    return interfaceList;
+  },
+  getHelperForLanguage: function getHelperForLanguage(count) {
+    return null;
+  },
+  implementationLanguage: Ci.nsIProgrammingLanguage.JAVASCRIPT,
+
+  // =========================== nsISupports ===========================
+  QueryInterface: XPCOMUtils.generateQI([Ci.nsIAppMenu,
+                                         Ci.nsIClassInfo]),
+
+  // XPCOMUtils stuff
+  classID: Components.ID("{0cb81a9b-efb9-4f11-b1e8-51eb883440a6}"),
+};
+
+const NSGetFactory = XPCOMUtils.generateNSGetFactory([AppMenu]);
diff --git a/mobile/components/webapps/Makefile.in b/mobile/components/webapps/Makefile.in
--- a/mobile/components/webapps/Makefile.in
+++ b/mobile/components/webapps/Makefile.in
@@ -42,6 +42,13 @@ VPATH		= @srcdir@
 
 include $(DEPTH)/config/autoconf.mk
 
+MODULE = MobileWebapps
+XPIDL_MODULE = MobileWebapps
+
+XPIDLSRCS = \
+        AppMenu.idl \
+        $(NULL)
+
 EXTRA_PP_COMPONENTS = \
                 WebappsComponents.manifest \
                 $(NULL)
@@ -52,6 +59,7 @@ EXTRA_COMPONENTS += \
                 OpenWebapps.js \
 		WebappProtocol.js \
 		WebappBgProtocol.js \
+		AppMenu.js \
                 $(NULL)
 endif
 
diff --git a/mobile/components/webapps/WebappsComponents.manifest b/mobile/components/webapps/WebappsComponents.manifest
--- a/mobile/components/webapps/WebappsComponents.manifest
+++ b/mobile/components/webapps/WebappsComponents.manifest
@@ -5,3 +5,7 @@ contract @mozilla.org/webapps/installer;
 #endif
 component {f35c4926-49da-48ac-88c7-809b86a60ca8} OpenWebapps.js
 contract @mozilla.org/openwebapp;1 {f35c4926-49da-48ac-88c7-809b86a60ca8}
+
+component {0cb81a9b-efb9-4f11-b1e8-51eb883440a6} AppMenu.js
+contract @mozilla.org/webapps/app-menu;1 {0cb81a9b-efb9-4f11-b1e8-51eb883440a6}
+category JavaScript-global-property appmenu @mozilla.org/webapps/app-menu;1
diff --git a/mobile/installer/package-manifest.in b/mobile/installer/package-manifest.in
--- a/mobile/installer/package-manifest.in
+++ b/mobile/installer/package-manifest.in
@@ -335,6 +335,7 @@
 @BINPATH@/components/amWebInstallListener.js
 @BINPATH@/components/nsBlocklistService.js
 @BINPATH@/components/WebappsComponents.manifest
+@BINPATH@/components/MobileWebapps.xpt
 +#ifdef MAEMO
 +@BINPATH@/components/WebappsMaemo.js
 +#endif
@@ -617,6 +618,7 @@ bin/components/@DLL_PREFIX@nkgnomevfs@DL
 #endif
 @BINPATH@/components/WebappProtocol.js
 @BINPATH@/components/WebappBgProtocol.js
+@BINPATH@/components/AppMenu.js
 #ifdef MOZ_UPDATER
 @BINPATH@/components/UpdatePrompt.js
 #endif
