# HG changeset patch
# User Fabrice Desr√© <fabrice@mozilla.com>
# Parent 95709da857b4b5a035cfc948578b317d0dfe44ab
Allows a webapp to be a target for an android intent

diff --git a/mobile/chrome/content/common-ui.js b/mobile/chrome/content/common-ui.js
--- a/mobile/chrome/content/common-ui.js
+++ b/mobile/chrome/content/common-ui.js
@@ -1349,14 +1349,14 @@ var WebappsUI = {
       elem.classList.add("webapps-perm");
     });
 
-    BrowserUI.pushPopup(this, this._dialog);
+    //BrowserUI.pushPopup(this, this._dialog);
     this._dialog.waitForClose();
   },
 
   hide: function hide() {
     this._dialog.close();
     this._dialog = null;
-    BrowserUI.popPopup(this);
+    //BrowserUI.popPopup(this);
   },
 
   _updatePermission: function updatePermission(aId, aPerm) {
@@ -1377,9 +1377,10 @@ var WebappsUI = {
     this._updatePermission("webapps-geoloc-checkbox", "geo");
     this._updatePermission("webapps-notifications-checkbox", "desktop-notification");
     let title = document.getElementById("webapps-title").value;
+    let intent = document.getElementById("webapps-intents").value;
     this.hide();
     if (this._manifest.icon)
-      this.install(this._manifest.uri, title, this._manifest.icon);
+      this.install(this._manifest.uri, title, this._manifest.icon, intent);
   },
   
   updateWebappsInstall: function updateWebappsInstall(aNode) {
@@ -1407,7 +1408,7 @@ var WebappsUI = {
     return true;
   },
   
-  install: function(aURI, aTitle, aIcon) {
+  install: function(aURI, aTitle, aIcon, aIntent) {
     Cu.import("resource://gre/modules/Services.jsm");
     const kIconSize = 64;
     
@@ -1432,7 +1433,8 @@ var WebappsUI = {
         if (handleAPK) {
           Cu.import("resource://services-sync/util.js");
           let url = Services.prefs.getCharPref("webapps.builder.url") + "android";
-          let json = Utils.encodeUTF8(Cc["@mozilla.org/dom/json;1"].createInstance(Ci.nsIJSON).encode({ name: aTitle, uri: aURI, icon: data.substring(22) }));
+          let json = Utils.encodeUTF8(Cc["@mozilla.org/dom/json;1"].createInstance(Ci.nsIJSON).
+                                      encode({ name: aTitle, uri: aURI, icon: data.substring(22) , intent: aIntent }));
           let is = Cc["@mozilla.org/io/string-input-stream;1"].createInstance(Ci.nsIStringInputStream);
           is.setData(json, json.length);
           // get a temp docShell
diff --git a/mobile/chrome/content/webapps.xul b/mobile/chrome/content/webapps.xul
--- a/mobile/chrome/content/webapps.xul
+++ b/mobile/chrome/content/webapps.xul
@@ -87,6 +87,16 @@
       </vbox>
     </button>
   </vbox>
+  <vbox class="prompt-section prompt-header" id="webapps-intent-box">
+   <label crop="center" flex="1" value="&webapps.intents;"/>
+    <menulist id="webapps-intents">
+      <menupopup>
+         <menuitem label="&webapps.intent.none;" value="INTENT.NONE"/>
+         <menuitem label="&webapps.intent.send;" value="INTENT.SEND"/>
+         <menuitem label="&webapps.intent.home;" value="INTENT.HOME_SCREEN"/>
+      </menupopup>
+    </menulist>
+  </vbox>
   <hbox class="prompt-buttons">
     <button class="prompt-button" command="cmd_ok" label="&ok.label;"/>
     <button class="prompt-button" command="cmd_cancel" label="&cancel.label;"/>
diff --git a/mobile/locales/en-US/chrome/webapps.dtd b/mobile/locales/en-US/chrome/webapps.dtd
--- a/mobile/locales/en-US/chrome/webapps.dtd
+++ b/mobile/locales/en-US/chrome/webapps.dtd
@@ -3,4 +3,8 @@
 <!ENTITY webapps.perm.geolocation "Location-aware browsing">
 <!ENTITY webapps.perm.offline "Offline data storage">
 <!ENTITY webapps.perm.notifications "Desktop notifications">
+<!ENTITY webapps.intents "Use this application for">
+<!ENTITY webapps.intent.none "Nothing">
+<!ENTITY webapps.intent.send "Sending/sharing">
+<!ENTITY webapps.intent.home "Home screen">
 <!ENTITY openwebapps.perm.needed "Needed by the application">
